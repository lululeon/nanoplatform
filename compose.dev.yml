version: "3"

services:
  pg-ublt:
    image: postgres:14-alpine
    restart: always
    volumes:
      - ${DB_DATAPATH}:/var/lib/postgresql/data
    ports:
      - "${PG_PORT}:${PG_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  graphql-api:
    image: ${ECR_GQL}
    restart: always
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg-ublt:${PG_PORT}/${POSTGRES_DB}"
      AUTH_SERVER_URL: "http://auth-service:7567"
      APPUSER: ${APPUSER}
      GUESTUSER: ${GUESTUSER}
      GQL_EXPOSED_SCHEMAS: ${GQL_EXPOSED_SCHEMAS}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    depends_on:
      pg-ublt:
        condition: service_healthy
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      pg-ublt:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      # java/jdbc-appropriate conn string reqd:
      POSTGRESQL_CONNECTION_URI: "postgresql://pg-ublt:${PG_PORT}/${POSTGRES_DB}?user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}"
      POSTGRESQL_TABLE_SCHEMA: "${SUPERTOKENS_SCHEMA}"
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
  auth-service:
    image: ${ECR_AUTH}
    restart: always
    depends_on:
      supertokens:
        condition: service_healthy
    ports:
      - "7567:7567"
    environment:
      SUPERTOKENS_SERVER_URL: "http://supertokens:3567"
      AUTH_SERVER_URL: "http://auth-service:7567"
      WEB_SERVER_URL: "http://localhost:3000"
