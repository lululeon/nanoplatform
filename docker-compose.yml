version: '3'

services:
  pg-ublt:
    image: postgres:14-alpine
    restart: always
    volumes:
    # /var/lib/postgresql/data is where pg expects to store data, so map a local volume to that:
    - ${DB_DATAPATH}:/var/lib/postgresql/data
    ports:
      - "${PG_PORT}:${PG_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  graphql-api:
    image: graphile/postgraphile
    restart: always
    command: ["--connection", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg-ublt:${PG_PORT}/${POSTGRES_DB}", "--schema", "${MAIN_SCHEMA}",]
    ports:
      - "5000:5000"
    depends_on:
      pg-ublt:
        condition: service_healthy
  service-broker:
    build:
      context: ./service-broker
      dockerfile: ./service-broker.dockerfile
    restart: always
    ports:
      - "8880:3000"
    deploy:
      mode: replicated
      replicas: 1
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      pg-ublt:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      # java/jdbc-appropriate conn string reqd:
      POSTGRESQL_CONNECTION_URI: "postgresql://pg-ublt:${PG_PORT}/${POSTGRES_DB}?user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}"
      POSTGRESQL_TABLE_SCHEMA: "${SUPERTOKENS_SCHEMA}"
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: ./dashboard.dockerfile
  #   restart: always
  #   ports:
  #     - "8881:3001"
  #   deploy:
  #     mode: replicated
  #     replicas: 1
