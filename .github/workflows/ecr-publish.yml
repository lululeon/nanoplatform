name: Push Images to ECR

on:
  push:
    branches: [main]
    paths:
      - "auth/**"
      - "graphql-api/**"
      - "app-ui/**"
      - ".github/workflows/ecr*"

jobs:
  build-auth:
    name: Build Image
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.2

      - name: Get changed files
        id: changeset
        uses: tj-actions/changed-files@v34
        with:
          files: auth/**

      - name: Build, tag, push to ECR only if files changed
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nano-auth-server
          IMAGE_TAG: latest
        if: steps.changeset.outputs.any_changed == 'true'
        run: |
          echo auth service has changed
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./auth
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-graphql-api:
    name: Build Graphql API Image
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.2

      - name: Get changed files
        id: changeset
        uses: tj-actions/changed-files@v34
        with:
          files: graphql-api/**

      - name: Build, tag, push to ECR only if files changed
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nano-graphql-server
          IMAGE_TAG: latest
        if: steps.changeset.outputs.any_changed == 'true'
        run: |
          echo graphql-api service has changed
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./graphql-api
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-app-ui:
    name: Build App UI Image
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.2

      - name: Get changed files
        id: changeset
        uses: tj-actions/changed-files@v34
        with:
          files: app-ui/**

      - name: Build, tag, push to ECR only if files changed
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nano-app-ui
          IMAGE_TAG: latest
        if: steps.changeset.outputs.any_changed == 'true'
        run: |
          echo app-ui frontend has changed
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app-ui
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
